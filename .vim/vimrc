set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
set rtp+=/usr/local/opt/fzf
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'pbogut/fzf-mru.vim'
Plugin 'junegunn/fzf.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'mxw/vim-jsx'
Plugin 'pangloss/vim-javascript'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'surround.vim'
Plugin 'mileszs/ack.vim'
Plugin 'scrooloose/syntastic'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'tComment'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'delimitMate.vim'
Plugin 'moll/vim-node'
Plugin 'kshenoy/vim-signature'
Plugin 'digitaltoad/vim-jade'
Plugin 'Valloric/YouCompleteMe'
Plugin 'tpope/vim-dispatch'
Plugin 'henrik/vim-indexed-search'
" Plugin 'Tagbar'
Plugin 'bkad/CamelCaseMotion'
Plugin 'altercation/vim-colors-solarized'
Plugin 'leafgarland/typescript-vim'
Plugin 'rizzatti/dash.vim'
Plugin 'szw/vim-maximizer'
Plugin 'vimwiki/vimwiki'

call vundle#end()
filetype plugin indent on    " required
filetype on
au BufNewFile,BufRead *.icss set filetype=css
au BufNewFile,BufRead *.ts set filetype=javascript
au BufRead *.book Book
command! Book set foldcolumn=2 | set nornu
""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""
set noswapfile
set encoding=utf-8
syntax enable
set rnu
let mapleader=" "
set textwidth=80
set nowrap
set colorcolumn=+1

"colors
set background=dark
set t_Co=256
let g:solarized_contrast = "normal"
let g:solarized_visibility="normal"
colorscheme solarized
highlight LineNr ctermfg=grey
highlight Pmenu ctermfg=241 ctermbg=254
highlight PmenuSel ctermfg=234 ctermbg=254
set cursorline

"tabs
set autoindent
set tabstop=4
set shiftwidth=4
set expandtab

"search
set nohls
set incsearch
set ignorecase
set smartcase

"tags
set tags=tags;/
"update tags
command! Uptag exec "!ctags -R " . getcwd()

"scrolling
set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

"buffers
set hidden
nmap <leader>T :enew<cr>
nnoremap <Tab> :bnext<CR>
nnoremap <S-Tab> :bprevious<CR>
nmap <leader>bq :bp <BAR> bd #<CR>
nmap <leader>n :cn<CR>
nmap <leader>b :cp<CR>
nmap <leader>t :NERDTreeTabsToggle<CR>
nmap <leader>r :source ~/.vim/vimrc<CR>
nmap <leader>g :NERDTreeTabsFind<CR>

"jump to module
nmap <leader>j gdf'gf

"find word usages (under cursor)
nmap <leader>u yiw:Ack <C-r>"<CR>

nmap <C-S-f> :Ack<space>
map <S-y> "*y
nmap <leader>p "*p
nmap <leader><S-p> "*<S-p>
nmap <C-b> <C-]>
nnoremap <S-k> "0P
nnoremap <leader>d :BufOnly<CR>

if bufwinnr(1)
  map <Down> <C-W>+
  map <Up> <C-W>-
  map <Right> <C-W><
  map <Left> <C-W>>
endif

"useful remappings
command! W w
command! Q q
command! Q quit<bang>
command! Qa qa<bang>
command! WQ wq<bang>
command! Wq wq<bang>
command! WQ wq<bang>
nmap <F4> :let @* = expand("%:p")<CR>
:inoremap <C-E> <C-X><C-E>
:inoremap <C-Y> <C-X><C-Y>

"CamelCaseMotion
call camelcasemotion#CreateMotionMappings('\')

"jsx
let g:jsx_ext_required = 0

"Syntastic
let g:syntastic_javascript_checkers = ['eslint']

"UltiSnips
let g:UltiSnipsSnippetDirectories=["~/.vim/my-snippets", "my-snippets"]
let g:UltiSnipsExpandTrigger="<c-e>"
let g:UltiSnipsJumpForwardTrigger="<c-e>"
let g:UltiSnipsJumpBackwardTrigger="<c-x>"
let g:UltiSnipsEditSplit="vertical"

"fzf
nmap <C-n> :let $FZF_DEFAULT_COMMAND = 'find . -type f -o -path "*/node_modules" -prune -o -path "*/.git" -prune -o -path "*/dist" -prune'<cr>:FZF --reverse<cr>
nmap <C-t> :let $FZF_DEFAULT_COMMAND = 'find . -type f -o -path "*/.git" -prune -o -path "*/dist" -prune'<cr>:FZF --reverse<cr>
nmap <C-k> :FZFMru --reverse<cr>

"nerd-tree-tabs
let NERDTreeIgnore=['node_modules']
let g:NERDTreeChDirMode = 2

set backspace=2

"YouCompleteMe
set shortmess+=c
set completeopt-=preview

"vim-dispatch
autocmd FileType javascript let b:dispatch = 'mocha --watch --compilers js:babel-register --require ignore-styles --require spec/jsdomSetup.js'
nnoremap <F9> :Dispatch<CR>

"Highlight in NERDTree the active buffer
"autocmd BufEnter * if &modifiable | NERDTreeFind | wincmd p | endif

" air-line
let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='base16'
let g:airline_powerline_fonts = 1

 if !exists('g:airline_symbols')
     let g:airline_symbols = {}
 endif

     " unicode symbols
 let g:airline_left_sep = '»'
 let g:airline_left_sep = '▶'
 let g:airline_right_sep = '«'
 let g:airline_right_sep = '◀'
 let g:airline_symbols.linenr = '␊'
 let g:airline_symbols.linenr = '␤'
 let g:airline_symbols.linenr = '¶'
 let g:airline_symbols.branch = '⎇'
 let g:airline_symbols.paste = 'ρ'
 let g:airline_symbols.paste = 'Þ'
 let g:airline_symbols.paste = '∥'
 let g:airline_symbols.whitespace = 'Ξ'

 " airline symbols
 let g:airline_left_sep = ''
 let g:airline_left_alt_sep = ''
 let g:airline_right_sep = ''
 let g:airline_right_alt_sep = ''
 let g:airline_symbols.branch = ''
 let g:airline_symbols.readonly = ''
 let g:airline_symbols.linenr = ''
